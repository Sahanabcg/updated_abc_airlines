"""initial schema

Revision ID: 6c2472866cad
Revises: 
Create Date: 2025-09-25 12:59:04.589841

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6c2472866cad'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('airport',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('airport', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_airport_code'), ['code'], unique=True)
        batch_op.create_index(batch_op.f('ix_airport_id'), ['id'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('admin', 'customer', name='userrole'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)

    op.create_table('ticket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('origin', sa.String(length=10), nullable=True),
    sa.Column('destination', sa.String(length=10), nullable=True),
    sa.Column('class', sa.String(length=50), nullable=True),
    sa.Column('meal_included', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['destination'], ['airport.code'], ),
    sa.ForeignKeyConstraint(['origin'], ['airport.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ticket', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ticket_id'), ['id'], unique=False)

    op.create_table('luggage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('size', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('NEW', 'ASSIGNED', 'VERIFIED', 'INTRANSIT', 'APPROVED', 'REJECTED', 'FAILED', name='tracking_status'), server_default='NEW', nullable=False),
    sa.ForeignKeyConstraint(['ticket_id'], ['ticket.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('luggage', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_luggage_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_luggage_status'), ['status'], unique=False)

    op.create_table('tracking_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('luggage_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'ASSIGNED', 'VERIFIED', 'INTRANSIT', 'APPROVED', 'REJECTED', 'FAILED', name='tracking_status_enum'), nullable=False),
    sa.Column('last_location', sa.String(length=10), nullable=True),
    sa.Column('scan_datetime', sa.DateTime(), nullable=True),
    sa.Column('next_destination', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['last_location'], ['airport.code'], ),
    sa.ForeignKeyConstraint(['luggage_id'], ['luggage.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['next_destination'], ['airport.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tracking_event', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tracking_event_luggage_id'), ['luggage_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tracking_event_status'), ['status'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tracking_event', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tracking_event_status'))
        batch_op.drop_index(batch_op.f('ix_tracking_event_luggage_id'))

    op.drop_table('tracking_event')
    with op.batch_alter_table('luggage', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_luggage_status'))
        batch_op.drop_index(batch_op.f('ix_luggage_id'))

    op.drop_table('luggage')
    with op.batch_alter_table('ticket', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ticket_id'))

    op.drop_table('ticket')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('airport', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_airport_id'))
        batch_op.drop_index(batch_op.f('ix_airport_code'))

    op.drop_table('airport')
    # ### end Alembic commands ###
